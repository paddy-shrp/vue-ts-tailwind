You are working in a Vue 3 + Vite project. Take the provided static HTML file and do the following:

1. **Component Extraction**
   - Identify logical sections (e.g., navbar, hero, steps, footer) and extract them into standalone Vue SFCs.
   - Name each component clearly, e.g., `HeroSection.vue`, `StepByStep.vue`, `SiteFooter.vue`.
   - Move HTML into `<template>` sections, convert inline styles/classes to proper usage with Tailwind or scoped CSS.
   - Use `<script setup>` syntax where applicable.
   - Avoid unnecessary complexity â€” keep props and reactivity minimal unless clearly needed.

2. **CSS Extraction**
   - If styles are defined inline or via `<style>` tags in the HTML, extract and place them in either:
     - Scoped `<style scoped>` blocks inside each Vue component
     - Or global styles (`src/assets/styles.css`) if shared across components
   - If Tailwind is used, remove redundant custom styles where utility classes suffice.

3. **Integration**
   - Place all components into `src/components/`
   - In `src/pages/Home.vue`, import and compose the components in the correct layout.
   - Make sure the site works exactly like the original HTML file visually and structurally.

4. **Routing**
   - If not already done, add the route to `Home.vue` in `router/index.ts`.

Keep it clean, maintainable, and idiomatic for Vue 3 + Vite. Your goal is to make the project fully modular and ready for dev iteration.
